{
  "hash": "e6a1a37c273b5c3f81c60c74e8b0e404",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"A2one\"\nauthor: \"ruchika\"\n---\n\n\n\n## WOMEN LIVE LONGER? {style=\"COLOR: BLUE\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula)\n```\n:::\n\n\n\n-   The current dataset only has 1 column since the character \";\" is used to differentiate among variables, we need to use the delimiter to specify them into separate columns.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nage_dataset <- read_delim(\"../../data/age-dataset.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 18408 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (3): Entity, Code, Continent\ndbl (2): Year, Population - Sex: all - Age: all - Variant: estimates\nnum (2): Life expectancy - Sex: female - Age: at birth - Variant: estimates,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ndelim =\";\"\nglimpse(age_dataset)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 18,408\nColumns: 7\n$ Entity                                                               <chr> \"…\n$ Code                                                                 <chr> \"…\n$ Year                                                                 <dbl> 2…\n$ `Life expectancy - Sex: female - Age: at birth - Variant: estimates` <dbl> N…\n$ `Life expectancy - Sex: male - Age: at birth - Variant: estimates`   <dbl> N…\n$ `Population - Sex: all - Age: all - Variant: estimates`              <dbl> N…\n$ Continent                                                            <chr> \"…\n```\n\n\n:::\n\n```{.r .cell-code}\nview(age_dataset)\n```\n:::\n\n\n\n-   Moving on, as the case study shows that only the dataset of the year 2015 has been taken into consideration, we have to use \"filter\" function to obtain only 2015 datasets. (The current set includes data from 1950's to 2021)\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    age_dataset_modified <- age_dataset %>%\n      filter(Year == 2015)\n    age_dataset_modified <- drop_na(age_dataset_modified)\n    \n    glimpse(age_dataset_modified)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    Rows: 236\n    Columns: 7\n    $ Entity                                                               <chr> \"…\n    $ Code                                                                 <chr> \"…\n    $ Year                                                                 <dbl> 2…\n    $ `Life expectancy - Sex: female - Age: at birth - Variant: estimates` <dbl> 6…\n    $ `Life expectancy - Sex: male - Age: at birth - Variant: estimates`   <dbl> 6…\n    $ `Population - Sex: all - Age: all - Variant: estimates`              <dbl> 3…\n    $ Continent                                                            <chr> \"…\n    ```\n    \n    \n    :::\n    :::\n\n\n\n-   Furthermore, since some the variables are NA, we have to remove them using drop_na.\n\n-   Here if we take an example - Akrotiri and Dhekelia the British overseas territories, no data has been provided thus we ought to remove them from the set.\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    colnames(age_dataset_modified)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] \"Entity\"                                                            \n    [2] \"Code\"                                                              \n    [3] \"Year\"                                                              \n    [4] \"Life expectancy - Sex: female - Age: at birth - Variant: estimates\"\n    [5] \"Life expectancy - Sex: male - Age: at birth - Variant: estimates\"  \n    [6] \"Population - Sex: all - Age: all - Variant: estimates\"             \n    [7] \"Continent\"                                                         \n    ```\n    \n    \n    :::\n    :::\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    age_dataset_modified <- age_dataset_modified %>%\n      mutate(\n      LifeExp_F = `Life expectancy - Sex: female - Age: at birth - Variant: estimates` / 10,  \n      LifeExp_M = `Life expectancy - Sex: male - Age: at birth - Variant: estimates` / 10,     \n        # A tiny messup occcured here so sorry, basically earlier I renamed the life expectancy into LifeExp_F and went to do the graph then realised population's name is also pretty big so came back to change the name, then code stopped working saying Life Expectancy doesn't exist so I checked the colnames but it showed the renamed names (LifeExp) so then in mutate I used the new names and divided by 10 but then it showed those names doesn't exist so I removed both and now the dataset shows correct name with correct numericals.\n        # I think the data was stored in modified that's why it's still showing even if I dont write it in code,but still not sure what happened, sorry for the inconvenience.\n        \n        Population = `Population - Sex: all - Age: all - Variant: estimates`,\n        Continent = as.factor(Continent)  \n      ) %>%\n      select(Entity, Code, Year, LifeExp_F, LifeExp_M, Population, Continent)\n    \n    glimpse(age_dataset_modified)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    Rows: 236\n    Columns: 7\n    $ Entity     <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"American Samoa\", \"And…\n    $ Code       <chr> \"AFG\", \"ALB\", \"DZA\", \"ASM\", \"AND\", \"AGO\", \"AIA\", \"ATG\", \"AR…\n    $ Year       <dbl> 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,…\n    $ LifeExp_F  <dbl> 64.6, 81.2, 76.8, 74.8, 85.4, 63.1, 80.8, 80.4, 80.2, 78.8,…\n    $ LifeExp_M  <dbl> 60.8, 76.4, 74.5, 70.3, 80.6, 58.2, 73.7, 75.1, 73.3, 69.6,…\n    $ Population <dbl> 33753500, 2882482, 39543148, 51391, 71766, 28127724, 14554,…\n    $ Continent  <fct> Asia, Europe, Africa, Oceania, Europe, Africa, North Americ…\n    ```\n    \n    \n    :::\n    :::\n\n\n\n    #### We have 7 variables -\n\n-   Entity is the name of the country which is a quant variable.\n\n-   Code again is the short-form of the country name this is a quant variable.\n\n-   Year, since it remains constant it is also a quant variable.\n\n-   Life Expectancy of Female and Male both consists of variety of numbers thus is a quant variable.\n\n-   Population again has a wide range of numbers thus a quant variable.\n\n-   Continent, since there are only 7 continents in the world and can be categorized so a qual variable.\n\n### DATA DICTIONARY\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_dictionary <- data.frame(\n  Variable_Name = c(\"Entity\", \"Code\", \"Year\", \"LifeExp_F\", \"LifeExp_M\", \"Population\", \"Continent\"),\n  Data_Type = c(\"Character\", \"Character\", \"Double\", \"Double\", \"Double\", \"Double\", \"Character\"),\n  Description = c(\"Country Name\", \"Short Form of the Country\", \"Year\", \"Life Expectancy of Females\", \"Life Expectancy of Males\", \"Population\", \"Continent\")\n)\n\nprint(data_dictionary)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Variable_Name Data_Type                Description\n1        Entity Character               Country Name\n2          Code Character  Short Form of the Country\n3          Year    Double                       Year\n4     LifeExp_F    Double Life Expectancy of Females\n5     LifeExp_M    Double   Life Expectancy of Males\n6    Population    Double                 Population\n7     Continent Character                  Continent\n```\n\n\n:::\n:::\n\n\n\n#### TARGET AND PREDICTOR VARIABLES\n\n-   Life Expectancy of people i.e male and female is the target variable since we are primarily focusing on this aspect.\n\n-   Whereas continent, population and gender are the predictor variables since they are used to predict life expectancy.\n\n    #### RESEARCH QUESTIONS / HYPOTHESIS\n\n    -   Female life expectancy is higher than Male life expectancy in countries with larger population\n\n    -   Asian countries have higher life expetancies.\n\n    -   Larger countries populations wise, have smaller life expectancies.\n\n    -   Countries having higher life expectancy for both genders have good socio-economic laws (Finland came to my mind)\n\n    -   A negative co-relation between male and female life expectancies.\n\n    -   Countries with similar population show similar life expectancy\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    #Basic scatter plot that has male life expectancy on x-axis and female on y-axi.\n    age_dataset_modified %>%\n      gf_point(LifeExp_F ~ LifeExp_M) %>%\n      gf_lm() %>%\n      gf_labs(\n        title = \"Scatter Plot\",\n        subtitle = \"Life Expectancy Across Countries & Years\"\n      )\n    ```\n    \n    ::: {.cell-output .cell-output-stderr}\n    \n    ```\n    Warning: Using the `size` aesthetic with geom_line was deprecated in ggplot2 3.4.0.\n    ℹ Please use the `linewidth` aesthetic instead.\n    ```\n    \n    \n    :::\n    \n    ::: {.cell-output-display}\n    ![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n    :::\n    :::\n\n::: {.cell}\n\n```{.r .cell-code}\n# THIS GRAPH IS CHATGPT-ed\nage_dataset_modified %>%\n  gf_point(LifeExp_F ~ LifeExp_M, \n           size = ~ ifelse(Population == 5.0e+08, 3, \n                           ifelse(Population == 1.0e+09, 5, 1)),  # Size 3 for 5.0e+08, size 5 for 1.0e+09, size 1 otherwise\n           alpha = 0.6) %>%\n  gf_lm() %>%\n  gf_labs(\n    title = \"Scatter Plot\",\n    subtitle = \"Life Expectancy Across Countries & Years FINAL\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nage_dataset_modified %>%\n  gf_point(LifeExp_F ~ LifeExp_M, \n           size = ~ Population,  \n           shape = 8, #so the number 21 is for circle but why be circle when you can be a star :>         \n           alpha = 0.4) %>% \n  gf_lm() %>%\n  gf_labs(\n    title = \"Scatter Plot\",\n    subtitle = \"Life Expectancy Across Countries & Years 2FINAL\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The following aesthetics were dropped during statistical transformation: size.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n#### QUESTIONS\n\n-   Do places with higher male life expectancy also have higher female life expectancy?\n\n-   How is population related to life expectancy of both genders?\n\n-   Is the gender gap in life exp the same in other population sized countries?\n\n#### INFERENCES\n\n-   The life expectancy is proportional, i.e in countries where men live longer, women also tend to live longer which is a consistent pattern across the graph.\n\n-   Since all the data points are very close to the line of best fit (more so in your website's graph than mine), it shows that overall that the difference in life expectancy is fairly smaller.\n\n-   Again in this case there are certain outliers that have either larger number or smaller number of life expectancy.\n\n-   The graph also shows that population size does not highly impact the overall expectancy trends.\n\nDONEcnb\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}