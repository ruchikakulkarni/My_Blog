{
  "hash": "111df1e1396aed973287760a4cd29a42",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"summary-class-2\"\nauthor: \"ruchika\"\n---\n\n\n\n## Summarizing Data\n\n#### DAY - 2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula)\nlibrary(kableExtra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n```\n\n\n:::\n:::\n\n\n\n## MPG DATASET\n\n#gg - allows you to plot, dplyr - glimpse function, name - space - usage (family name) sometimes different packages have same name but different function so better to use n-s-u format, mosiac - categorically spreads the variable in quant n qual.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 234 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   <chr>        <chr>      <dbl> <int> <int> <chr> <chr> <int> <int> <chr> <chr>\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2    2008     4 manu… f        20    31 p     comp…\n 4 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n 5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp…\n# ℹ 224 more rows\n```\n\n\n:::\n:::\n\n\n\n#%\\>% is and then, head(10) basically gives the first 10 lines of the dataset.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>% \n  head(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   <chr>        <chr>      <dbl> <int> <int> <chr> <chr> <int> <int> <chr> <chr>\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2    2008     4 manu… f        20    31 p     comp…\n 4 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n 5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nskim(mpg)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |     |\n|:------------------------|:----|\n|Name                     |mpg  |\n|Number of rows           |234  |\n|Number of columns        |11   |\n|_______________________  |     |\n|Column type frequency:   |     |\n|character                |6    |\n|numeric                  |5    |\n|________________________ |     |\n|Group variables          |None |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|manufacturer  |         0|             1|   4|  10|     0|       15|          0|\n|model         |         0|             1|   2|  22|     0|       38|          0|\n|trans         |         0|             1|   8|  10|     0|       10|          0|\n|drv           |         0|             1|   1|   1|     0|        3|          0|\n|fl            |         0|             1|   1|   1|     0|        5|          0|\n|class         |         0|             1|   3|  10|     0|        7|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|    mean|   sd|     p0|    p25|    p50|    p75| p100|hist  |\n|:-------------|---------:|-------------:|-------:|----:|------:|------:|------:|------:|----:|:-----|\n|displ         |         0|             1|    3.47| 1.29|    1.6|    2.4|    3.3|    4.6|    7|▇▆▆▃▁ |\n|year          |         0|             1| 2003.50| 4.51| 1999.0| 1999.0| 2003.5| 2008.0| 2008|▇▁▁▁▇ |\n|cyl           |         0|             1|    5.89| 1.61|    4.0|    4.0|    6.0|    8.0|    8|▇▁▇▁▇ |\n|cty           |         0|             1|   16.86| 4.26|    9.0|   14.0|   17.0|   19.0|   35|▆▇▃▁▁ |\n|hwy           |         0|             1|   23.44| 5.95|   12.0|   18.0|   24.0|   27.0|   44|▅▅▇▁▁ |\n\n\n:::\n:::\n\n\n\n#syntax - glimpse(mpg) OR mpg %\\>% glimpse both work the same.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 234\nColumns: 11\n$ manufacturer <chr> \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        <chr> \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        <dbl> 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         <int> 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          <int> 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        <chr> \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n$ drv          <chr> \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n$ cty          <int> 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          <int> 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           <chr> \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n$ class        <chr> \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…\n```\n\n\n:::\n:::\n\n\n\n#data munging, basically when you want to change your data into something else you use mutate which is part of data munging (cleaning)\n\n#Ordinal variable is called factor (fct).\n\n#mpg_modified (saving the file as modified so that the earlier file doesn't get contaminated) = mpg and then mutate.\n\n\\# converting data of cylinder, fuel type, drive type (only 3), class, trans into ordinal i.e factor, since they are categories.\n\n#factors are basically categories, for eg genders, since they can be categorized into 2 sections so its a factor.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg_modified <- mpg %>%\n  dplyr::mutate(\n    cyl = as_factor(cyl),\n    fl = as_factor(fl),\n    drv = as_factor(drv),\n    class = as_factor(class),\n    trans = as_factor(trans)\n  )\nglimpse(mpg_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 234\nColumns: 11\n$ manufacturer <chr> \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        <chr> \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        <dbl> 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         <int> 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          <fct> 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        <fct> auto(l5), manual(m5), manual(m6), auto(av), auto(l5), man…\n$ drv          <fct> f, f, f, f, f, f, f, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, r, …\n$ cty          <int> 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          <int> 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           <fct> p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, r, …\n$ class        <fct> compact, compact, compact, compact, compact, compact, com…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg_modified %>% dplyr::count(cyl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 2\n  cyl       n\n  <fct> <int>\n1 4        81\n2 5         4\n3 6        79\n4 8        70\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg_modified %>%\n  group_by(cyl, fl) %>%\n  summarize(average_hwy = mean(hwy), count = n())\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'cyl'. You can override using the `.groups`\nargument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 4\n# Groups:   cyl [4]\n   cyl   fl    average_hwy count\n   <fct> <fct>       <dbl> <int>\n 1 4     p            27.8    22\n 2 4     r            28.3    55\n 3 4     d            43       3\n 4 4     c            36       1\n 5 5     r            28.8     4\n 6 6     p            25.3    17\n 7 6     r            22.2    60\n 8 6     e            17       1\n 9 6     d            22       1\n10 8     p            20.8    13\n11 8     r            17.5    49\n12 8     e            12.7     7\n13 8     d            17       1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg_modified %>% \ngroup_by(manufacturer) %>% \n  summarize(average_cty = mean(cty), count = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15 × 3\n   manufacturer average_cty count\n   <chr>              <dbl> <int>\n 1 audi                17.6    18\n 2 chevrolet           15      19\n 3 dodge               13.1    37\n 4 ford                14      25\n 5 honda               24.4     9\n 6 hyundai             18.6    14\n 7 jeep                13.5     8\n 8 land rover          11.5     4\n 9 lincoln             11.3     3\n10 mercury             13.2     4\n11 nissan              18.1    13\n12 pontiac             17       5\n13 subaru              19.3    14\n14 toyota              18.5    34\n15 volkswagen          20.9    27\n```\n\n\n:::\n:::\n\n\n\n## MATH ANXIETY DATASET\n\n#../../ this basically tells the file path used.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_anxiety <- read_csv(\"../../data/MathAnxiety.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 599 Columns: 1\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Age;Gender;Grade;AMAS;RCMAS;Arith\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nmath_anxiety\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 599 × 1\n   `Age;Gender;Grade;AMAS;RCMAS;Arith`\n   <chr>                              \n 1 137,8;Boy;Secondary;9;20;6         \n 2 140,7;Boy;Secondary;18;8;6         \n 3 137,9;Girl;Secondary;23;26;5       \n 4 142,8;Girl;Secondary;19;18;7       \n 5 135,6;Boy;Secondary;23;20;1        \n 6 135,0;Girl;Secondary;27;33;1       \n 7 133,6;Boy;Secondary;22;23;4        \n 8 139,3;Boy;Secondary;17;11;7        \n 9 131,7;Girl;Secondary;28;32;2       \n10 134,8;Boy;Secondary;20;30;6        \n# ℹ 589 more rows\n```\n\n\n:::\n:::\n\n\n\n#delim tells the character to separate values like changing (;) to (,)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_anxiety <- read_delim(file = \"../../data/MathAnxiety.csv\", delim = \";\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 599 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (2): Gender, Grade\ndbl (3): AMAS, RCMAS, Arith\nnum (1): Age\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nmath_anxiety\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 599 × 6\n     Age Gender Grade      AMAS RCMAS Arith\n   <dbl> <chr>  <chr>     <dbl> <dbl> <dbl>\n 1  1378 Boy    Secondary     9    20     6\n 2  1407 Boy    Secondary    18     8     6\n 3  1379 Girl   Secondary    23    26     5\n 4  1428 Girl   Secondary    19    18     7\n 5  1356 Boy    Secondary    23    20     1\n 6  1350 Girl   Secondary    27    33     1\n 7  1336 Boy    Secondary    22    23     4\n 8  1393 Boy    Secondary    17    11     7\n 9  1317 Girl   Secondary    28    32     2\n10  1348 Boy    Secondary    20    30     6\n# ℹ 589 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_anxiety %>% dplyr::glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 599\nColumns: 6\n$ Age    <dbl> 1378, 1407, 1379, 1428, 1356, 1350, 1336, 1393, 1317, 1348, 141…\n$ Gender <chr> \"Boy\", \"Boy\", \"Girl\", \"Girl\", \"Boy\", \"Girl\", \"Boy\", \"Boy\", \"Gir…\n$ Grade  <chr> \"Secondary\", \"Secondary\", \"Secondary\", \"Secondary\", \"Secondary\"…\n$ AMAS   <dbl> 9, 18, 23, 19, 23, 27, 22, 17, 28, 20, 16, 20, 21, 36, 16, 27, …\n$ RCMAS  <dbl> 20, 8, 26, 18, 20, 33, 23, 11, 32, 30, 10, 4, 23, 26, 24, 21, 3…\n$ Arith  <dbl> 6, 6, 5, 7, 1, 1, 4, 7, 2, 6, 2, 5, 2, 6, 2, 7, 2, 4, 7, 3, 8, …\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_anxiety %>% mosaic::inspect()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ncategorical variables:  \n    name     class levels   n missing\n1 Gender character      2 599       0\n2  Grade character      2 599       0\n                                   distribution\n1 Boy (53.9%), Girl (46.1%)                    \n2 Primary (66.9%), Secondary (33.1%)           \n\nquantitative variables:  \n   name   class min     Q1 median     Q3  max       mean         sd   n missing\n1   Age numeric  37 1061.5   1208 1418.5 1875 1246.49249 223.112183 599       0\n2  AMAS numeric   4   18.0     22   26.5   45   21.98164   6.597962 599       0\n3 RCMAS numeric   1   14.0     19   25.0   41   19.24040   7.566802 599       0\n4 Arith numeric   0    4.0      6    7.0    8    5.30217   2.105220 599       0\n```\n\n\n:::\n:::\n\n\n\n#turning gender & grade into factor since they can be categorized, age is shown as 1378, which in the dataset is written as 137,8 which should be 137.8, so its divided by 100 multiplied by 12 so 120.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_anxiety_modified <- math_anxiety %>%\n  dplyr::mutate(\n    Age = as.integer(Age / 120),\n    Gender = as_factor(Gender),\n    Grade = as_factor(Grade)\n  )\nglimpse(math_anxiety_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 599\nColumns: 6\n$ Age    <int> 11, 11, 11, 11, 11, 11, 11, 11, 10, 11, 11, 13, 12, 11, 11, 11,…\n$ Gender <fct> Boy, Boy, Girl, Girl, Boy, Girl, Boy, Boy, Girl, Boy, Boy, Boy,…\n$ Grade  <fct> Secondary, Secondary, Secondary, Secondary, Secondary, Secondar…\n$ AMAS   <dbl> 9, 18, 23, 19, 23, 27, 22, 17, 28, 20, 16, 20, 21, 36, 16, 27, …\n$ RCMAS  <dbl> 20, 8, 26, 18, 20, 33, 23, 11, 32, 30, 10, 4, 23, 26, 24, 21, 3…\n$ Arith  <dbl> 6, 6, 5, 7, 1, 1, 4, 7, 2, 6, 2, 5, 2, 6, 2, 7, 2, 4, 7, 3, 8, …\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_anxiety_modified %>% \n  group_by(Gender) %>% \n  summarize(average_anxiety = mean(RCMAS), count = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n  Gender average_anxiety count\n  <fct>            <dbl> <int>\n1 Boy               18.1   323\n2 Girl              20.6   276\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_anxiety_modified %>% \n  group_by(Gender) %>% \n  summarize(average_anxiety = mean(Arith), count = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n  Gender average_anxiety count\n  <fct>            <dbl> <int>\n1 Boy               5.27   323\n2 Girl              5.34   276\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_anxiety_modified %>% \n  group_by(Gender) %>% \n  summarize(average_anxiety = mean(AMAS), count = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n  Gender average_anxiety count\n  <fct>            <dbl> <int>\n1 Boy               21.2   323\n2 Girl              22.9   276\n```\n\n\n:::\n:::\n\n\n\n#Trying out 2 groups Gender and Grade\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_anxiety_modified %>% \n  group_by(Gender, Grade) %>% \n  summarize(average_anxiety = mean(AMAS), count = n())\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'Gender'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 4\n# Groups:   Gender [2]\n  Gender Grade     average_anxiety count\n  <fct>  <fct>               <dbl> <int>\n1 Boy    Secondary            21.5   124\n2 Boy    Primary              20.9   199\n3 Girl   Secondary            23.5    74\n4 Girl   Primary              22.7   202\n```\n\n\n:::\n:::\n\n\n\n\n\n\\# WORKEDD - have to specify for each variable.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_anxiety_modified %>% \n  group_by(Gender) %>% \n  summarize(average_anxietyrcmas = mean(RCMAS),average_anxietyamas = mean(AMAS), count = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 4\n  Gender average_anxietyrcmas average_anxietyamas count\n  <fct>                 <dbl>               <dbl> <int>\n1 Boy                    18.1                21.2   323\n2 Girl                   20.6                22.9   276\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}