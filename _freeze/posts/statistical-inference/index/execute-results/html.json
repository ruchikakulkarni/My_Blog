{
  "hash": "6e080b1f008b01a5d211966c685b7f0b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"statistics\"\nauthor: \"ruchika\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula)\nlibrary(infer)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'infer'\n\nThe following objects are masked from 'package:mosaic':\n\n    prop_test, t_test\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(broom) # Clean test results in tibble form\nlibrary(resampledata) # Datasets from Chihara and Hesterberg's book\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'resampledata'\n\nThe following object is masked from 'package:datasets':\n\n    Titanic\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(openintro) # More datasets\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata\n\nAttaching package: 'openintro'\n\nThe following object is masked from 'package:mosaic':\n\n    dotPlot\n\nThe following objects are masked from 'package:lattice':\n\n    ethanol, lsegments\n```\n\n\n:::\n:::\n\n\n\n\n\n-   Tibble - A data frame that is easier to read.\n\n-   rnorm - random but normally distributed data.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(40)  # for replication\n# Data as individual vectors ( for t.tests etc)\ny <- rnorm(50, mean = 2, sd = 2)\n\n# And as tibble too\nmydata <- tibble(y = y)\nmydata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 1\n        y\n    <dbl>\n 1  2.96 \n 2  2.99 \n 3  0.281\n 4  0.342\n 5  1.36 \n 6 -0.608\n 7 -0.843\n 8  5.49 \n 9  1.42 \n10 -0.618\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmydata %>%\n    gf_density(~y) %>%\n    gf_fitdistr(dist = \"dnorm\") %>%\n    gf_labs(title = \"Densities of Original Data Variables\", subtitle = \"Compared with Normal Density\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# t-test\nt1 <- mosaic::t_test(\n          y, # Name of variable\n          mu = 0, # belief of population mean\n          alternative = \"two.sided\") %>% # Check both sides\n  \n  broom::tidy() # Make results presentable, and plottable!!\nt1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 8\n  estimate statistic     p.value parameter conf.low conf.high method alternative\n     <dbl>     <dbl>       <dbl>     <dbl>    <dbl>     <dbl> <chr>  <chr>      \n1     2.05      6.79     1.43e-8        49     1.44      2.65 One S… two.sided  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Standard deviation\nsd_belief_pop <- 0  # Assert our belief\n# Sample Mean\nsd_y <- sd(y)\nsd_y\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.131751\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}