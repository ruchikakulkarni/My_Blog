{
  "hash": "b7cc68cb1eb7f1351a375e7eb7587c93",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"statsthreepaired\"\nauthor: \"ruchika\"\n---\n\n\n\n\n\n## INFERENCES THREE PAIRED MEANS \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # Tidy data processing\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula) # Formula based plots\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n\tlearnr::run_tutorial(\"introduction\", package = \"ggformula\")\n\tlearnr::run_tutorial(\"refining\", package = \"ggformula\")\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic) # Data inspection and Statistical Inference\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following object is masked from 'package:scales':\n\n    rescale\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(broom) # Tidy outputs from Statistical Analyses\nlibrary(infer) # Statistical Inference, Permutation/Bootstrap\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'infer'\n\nThe following objects are masked from 'package:mosaic':\n\n    prop_test, t_test\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(patchwork) # Arranging Plots\nlibrary(ggprism) # Interesting Categorical Axes\nlibrary(supernova) # Beginner-Friendly ANOVA Tables\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'supernova'\n\nThe following object is masked from 'package:scales':\n\n    number\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfrogs_orig <- read_csv(\"../../data/frogs.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 60 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (4): Frogspawn sample id, Temperature13, Temperature18, Temperature25\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nfrogs_orig\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 60 × 4\n   `Frogspawn sample id` Temperature13 Temperature18 Temperature25\n                   <dbl>         <dbl>         <dbl>         <dbl>\n 1                     1            24            NA            NA\n 2                     2            NA            21            NA\n 3                     3            NA            NA            18\n 4                     4            26            NA            NA\n 5                     5            NA            22            NA\n 6                     6            NA            NA            14\n 7                     7            27            NA            NA\n 8                     8            NA            22            NA\n 9                     9            NA            NA            15\n10                    10            27            NA            NA\n# ℹ 50 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#regex is a language\n#regex stands for regular expression (allows to separate character strings into words/digits) \n#\\\\d+ is the regex here\n#pivot_longer just makes the data readable\n#separate_wider_regex - taking the data and cleaning it up of the column temp into 13, 18 & 25\n\nfrogs_orig %>%\n  pivot_longer(\n    .,\n    cols = starts_with(\"Temperature\"),\n    cols_vary = \"fastest\",\n    # new in pivot_longer\n    names_to = \"Temp\",\n    values_to = \"Time\"\n  ) %>%\n  drop_na() %>%\n  ##\n  separate_wider_regex(\n    cols = Temp,\n    # knock off the unnecessary \"Temperature\" word\n    # Just keep the digits thereafter\n    patterns = c(\"Temperature\", TempFac = \"\\\\d+\"),\n    cols_remove = TRUE\n  ) %>%\n  # Convert Temp into TempFac, a 3-level factor\n  mutate(TempFac = factor(\n    x = TempFac,\n    levels = c(13, 18, 25),\n    labels = c(\"13\", \"18\", \"25\")\n  )) %>%\n  rename(\"Id\" = `Frogspawn sample id`) -> frogs_long\nfrogs_long\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 60 × 3\n      Id TempFac  Time\n   <dbl> <fct>   <dbl>\n 1     1 13         24\n 2     2 18         21\n 3     3 25         18\n 4     4 13         26\n 5     5 18         22\n 6     6 25         14\n 7     7 13         27\n 8     8 18         22\n 9     9 25         15\n10    10 13         27\n# ℹ 50 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n##\nfrogs_long %>% count(TempFac)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  TempFac     n\n  <fct>   <int>\n1 13         20\n2 18         20\n3 25         20\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#temp and hatching time have a positive correlation\ngf_histogram(~Time,\n  fill = ~TempFac,\n  data = frogs_long, alpha = 0.8\n) %>%\n  gf_vline(xintercept = ~ mean(Time)) %>%\n  gf_labs(\n    title = \"Histograms of Hatching Time Distributions vs Temperature\",\n    x = \"Hatching Time\", y = \"Count\"\n  ) %>%\n  gf_text(7 ~ (mean(Time) + 2),\n    label = \"Overall Mean\"\n  ) %>%\n  gf_refine(guides(fill = guide_legend(title = \"Temperature level (°C)\")))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_boxplot(\n  data = frogs_long,\n  Time ~ TempFac,\n  fill = ~TempFac,\n  alpha = 0.5\n) %>%\n  gf_vline(xintercept = ~ mean(Time)) %>%\n  gf_labs(\n    title = \"Boxplots of Hatching Time Distributions vs Temperature\",\n    x = \"Temperature\", y = \"Hatching Time\",\n    caption = \"Using ggprism\"\n  ) %>%\n  gf_refine(\n    scale_x_discrete(guide = \"prism_bracket\"), #breaks the x-axis into 3 parts\n    guides(fill = guide_legend(title = \"Temperature level (°C)\"))\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The S3 guide system was deprecated in ggplot2 3.5.0.\nℹ It has been replaced by a ggproto system that can be extended.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfrogs_anova <- aov(Time ~ TempFac, data = frogs_long)\nfrogs_anova\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall:\n   aov(formula = Time ~ TempFac, data = frogs_long)\n\nTerms:\n                 TempFac Residuals\nSum of Squares  1020.933    75.400\nDeg. of Freedom        2        57\n\nResidual standard error: 1.150133\nEstimated effects may be unbalanced\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Errorbar plots\n# The black dot is the difference between 2 means i.e 25-13, which is 12 where it is plotted\n# The line towards the right corner is confidence interval\nsupernova::pairwise(frogs_anova,\n  correction = \"Bonferroni\", # Try \"Tukey\"\n  alpha = 0.05, # 95% CI calculation\n  var_equal = TRUE, # We'll see\n  plot = TRUE\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Pairwise t-tests with Bonferroni correction ─────────────────────────────────\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nModel: Time ~ TempFac\n```\n\n\n:::\n\n\n::: {.cell-output .cell-output-stderr}\n\n```\nTempFac\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLevels: 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nFamily-wise error-rate: 0.049\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  group_1 group_2    diff pooled_se       t    df   lower  upper p_adj\n  <chr>   <chr>     <dbl>     <dbl>   <dbl> <int>   <dbl>  <dbl> <dbl>\n1 18      13       -5.300     0.257 -20.608    57  -5.861 -4.739 .0000\n2 25      13      -10.100     0.257 -39.272    57 -10.661 -9.539 .0000\n3 25      18       -4.800     0.257 -18.664    57  -5.361 -4.239 .0000\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}