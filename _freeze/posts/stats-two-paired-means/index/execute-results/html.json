{
  "hash": "8861bbec940d943c40844aa0b9b80611",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"statspairs\"\nauthor: \"ruchika\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(broom) # Tidy Test data\nlibrary(resampledata3) # Datasets from Chihara and Hesterberg's book\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'resampledata3'\n\nThe following object is masked from 'package:datasets':\n\n    Titanic\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(gt) # for tables\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"Diving2017\", package = \"resampledata3\")\nDiving2017\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     Name     Country Semifinal  Final\n1        CHEONG Jun Hoong    Malaysia    325.50 397.50\n2                SI Yajie       China    382.80 396.00\n3                REN Qian       China    367.50 391.95\n4              KIM Mi Rae North Korea    346.00 385.55\n5              WU Melissa   Australia    318.70 370.20\n6           KIM Kuk Hyang North Korea    360.85 360.00\n7         ITAHASHI Minami       Japan    313.70 357.85\n8        BENFEITO Meaghan      Canada    355.15 331.40\n9          PAMG Pandelela    Malaysia    322.75 322.40\n10        CHAMANDY Olivia      Canada    320.55 307.15\n11       PARRATTO Jessica         USA    322.75 302.35\n12 MURILLO URREA Carolina    Colombia    325.75 283.35\n```\n\n\n:::\n\n```{.r .cell-code}\nDiving2017_inspect <- inspect(Diving2017)\nDiving2017_inspect$categorical\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 6\n  name    class  levels     n missing distribution                              \n  <chr>   <chr>   <int> <int>   <int> <chr>                                     \n1 Name    factor     12    12       0 \" SI Yajie (8.3%) ...                    …\n2 Country factor      8    12       0 \"Canada (16.7%), China (16.7%) ...       …\n```\n\n\n:::\n\n```{.r .cell-code}\nDiving2017_inspect$quantitative\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 11\n  name      class     min    Q1 median    Q3   max  mean    sd     n missing\n* <chr>     <chr>   <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <int>   <int>\n1 Semifinal numeric  314.  322.   326.  357.  383.  338.  22.9    12       0\n2 Final     numeric  283.  319.   359.  387.  398.  350.  40.0    12       0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Did this since its easier to plot long form data\n\nDiving2017_long <- Diving2017 %>%\n  pivot_longer(\n    cols = c(Final, Semifinal),\n    names_to = \"race\",\n    values_to = \"scores\"\n  )\nDiving2017_long\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 4\n   Name               Country     race      scores\n   <fct>              <fct>       <chr>      <dbl>\n 1 \"CHEONG Jun Hoong\" Malaysia    Final       398.\n 2 \"CHEONG Jun Hoong\" Malaysia    Semifinal   326.\n 3 \" SI Yajie\"        China       Final       396 \n 4 \" SI Yajie\"        China       Semifinal   383.\n 5 \"REN Qian\"         China       Final       392.\n 6 \"REN Qian\"         China       Semifinal   368.\n 7 \"KIM Mi Rae\"       North Korea Final       386.\n 8 \"KIM Mi Rae\"       North Korea Semifinal   346 \n 9 \"WU Melissa\"       Australia   Final       370.\n10 \"WU Melissa\"       Australia   Semifinal   319.\n# ℹ 14 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nDiving2017_long %>%\n  gf_density(~scores,\n    fill = ~race,\n    alpha = 0.5,\n    title = \"Diving Scores\"\n  ) %>%\n  gf_facet_grid(~race) %>%\n  gf_fitdistr(dist = \"dnorm\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#The black line is if it was glossier then it would've been like that\n#Density is a histrogram with very small number of bins.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nDiving2017_long %>%\n  gf_col(\n    fct_reorder(Name, scores) ~ scores,\n    fill = ~race,\n    alpha = 0.5,\n    position = \"dodge\",\n    xlab = \"Scores\",\n    ylab = \"Name\",\n    title = \"Diving Scores\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nDiving2017_long %>%\n  gf_boxplot(\n    scores ~ race,\n    fill = ~race,\n    alpha = 0.5,\n    xlab = \"Race\",\n    ylab = \"Scores\",\n    title = \"Diving Scores\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshapiro.test(Diving2017$Final)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  Diving2017$Final\nW = 0.9184, p-value = 0.273\n```\n\n\n:::\n\n```{.r .cell-code}\nshapiro.test(Diving2017$Semifinal)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  Diving2017$Semifinal\nW = 0.86554, p-value = 0.05738\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nobs_diff_swim <- diffmean(scores ~ race,\n  data = Diving2017_long,\n  only.2 = FALSE #creates pair data\n) # paired data\n\n# Can use this also\n# formula method is better for permutation test!\n# obs_diff_swim <- mean(~ (Final - Semifinal), data = Diving2017)\n\nobs_diff_swim\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ndiffmean \n -11.975 \n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}